---
// src/pages/blog/index.astro
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import BlogCard from "../../components/blog/BlogCard.astro";
import "../../styles/blog.css";

// Get all blog posts, sorted by publication date
const posts: CollectionEntry<"blog">[] = (await getCollection("blog")).sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Extract unique tags from all posts
const allTags = [...new Set(posts.flatMap((post) => post.data.tags || []))];

const pageTitle = "Blog";
const pageDescription =
  "Read the latest updates and articles about LLMs, web standards, and AI development.";

// SEO metadata
const ogImage = "/og-image.png";
const canonicalURL = new URL("/blog", Astro.site);
---

<Layout title={pageTitle} description={pageDescription}>
  <!-- Skip to content link for accessibility -->
  <a href="#main-content" class="skip-to-content">Skip to content</a>

  <main id="main-content">
    <!-- Blog Header Section -->
    <section class="blog-index-header">
      <div class="container mx-auto px-4">
        <h1 class="blog-index-title">{pageTitle}</h1>
        <p class="blog-index-description">{pageDescription}</p>
      </div>
    </section>

    <div class="container mx-auto px-4 pb-16">
      <!-- Filter/Category Navigation -->
      <nav class="blog-filter-bar" aria-label="Blog categories">
        <button
          class="blog-filter-button"
          aria-current="true"
          aria-label="Show all blog posts"
        >
          All
        </button>

        {
          allTags.map((tag) => (
            <button
              class="blog-filter-button"
              aria-current="false"
              aria-label={`Show posts tagged with ${tag}`}
            >
              {tag.charAt(0).toUpperCase() + tag.slice(1)}
            </button>
          ))
        }

        <div class="ml-auto">
          <label for="blog-search" class="sr-only">Search blog posts</label>
          <div class="relative">
            <div
              class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-gray-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            <input
              type="search"
              id="blog-search"
              class="block w-full pl-10 pr-3 py-2 border border-gray-700 rounded-lg bg-gray-800 text-gray-300 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              placeholder="Search"
            />
          </div>
        </div>
      </nav>

      <!-- Blog Posts Grid -->
      <div class="blog-grid">
        {posts.map((post) => <BlogCard post={post} />)}
      </div>
    </div>
  </main>

  <!-- Structured Data for SEO -->
  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "CollectionPage",
      headline: pageTitle,
      description: pageDescription,
      url: canonicalURL,
      image: ogImage,
      mainEntity: {
        "@type": "ItemList",
        itemListElement: posts.map((post, index) => ({
          "@type": "ListItem",
          position: index + 1,
          url: `${canonicalURL}/${post.slug}`,
          name: post.data.title,
        })),
      },
    })}
  />
</Layout>
