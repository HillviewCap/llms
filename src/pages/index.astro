---
import Layout from "../layouts/Layout.astro";
import StructuredData from "../components/StructuredData.astro";
// Import the JSON data
import llmsDataJson from "../data/llms_metadata.json";

// Define TypeScript interfaces for the data
type Quality = "High" | "Medium" | "Low";

interface LlmMetadata {
  source_domain: string;
  // cf_categories removed as it's not in the JSON data
}

interface LlmEntry {
  url: string;
  domain: string; // Original domain from the URL, might differ from source_domain
  status_code: number;
  content_hash: string;
  metadata: LlmMetadata; // Contains the source_domain
  last_checked_utc: string;
  first_added: string;
  last_updated: string;
  quality?: Quality;
  title?: string;
  summary?: string;
  parsed_title?: string; // Added based on TS errors
  fallback_title?: string; // Added based on TS errors
  parsed_summary?: string; // Added based on TS errors
  fallback_summary?: string; // Added based on TS errors
}

// Assert the type of the imported JSON data
const llmsData: LlmEntry[] = llmsDataJson as LlmEntry[];

// Sort the data by quality (High > Medium > Low)
const sortedLlmsData: LlmEntry[] = [...llmsData].sort((a, b) => {
  const qualityOrder: Record<Quality, number> = { High: 0, Medium: 1, Low: 2 };
  // Assert type Quality for indexing and provide default
  const qualityA = (a.quality ?? "Medium") as Quality;
  const qualityB = (b.quality ?? "Medium") as Quality;
  return qualityOrder[qualityA] - qualityOrder[qualityB];
});

// Get unique source domains for filtering from the filtered data
const uniqueDomains: string[] = [
  ...new Set(sortedLlmsData.map((entry) => entry.metadata.source_domain)),
].sort();
// Helper function to strip HTML tags
const stripHtml = (html: string | undefined | null): string =>
  html?.replace(/<[^>]*>?/gm, "") ?? "";

// Helper function for date formatting
const formatDate = (dateString: string | undefined | null): string => {
  if (!dateString) return "N/A";
  try {
    return new Date(dateString).toLocaleDateString("en-US", {
      year: "numeric",
      month: "short",
      day: "numeric",
    });
  } catch (e) {
    console.error("Error formatting date:", e);
    return "Invalid Date";
  }
};

// Map for quality badge styling
const qualityStyles = {
  high: "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200",
  medium:
    "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200",
  low: "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200",
};
---

<Layout
  title="LLMS.txt Explorer"
  description="Explore and analyze LLMS.txt files from various domains across the web"
>
  <StructuredData
    type="Dataset"
    data={{
      name: "LLMS.txt Explorer Dataset",
      description:
        "A comprehensive collection of LLMS.txt files from various domains across the web",
      keywords: "LLMS.txt, AI, machine learning, language models, web crawling",
      url: "https://llms-explorer.example.com", // Replace with actual URL if available
      sameAs: "https://github.com/example/llms-explorer", // Replace with actual repo if available
      creator: {
        "@type": "Organization",
        name: "LLMS.txt Explorer Team", // Replace if needed
      },
      datePublished: new Date().toISOString().split("T")[0],
      license: "https://creativecommons.org/licenses/by/4.0/", // Verify license
    }}
  />

  <div class="mx-auto px-4 py-8">
    <header class="mb-10 text-center">
      <div
        class="enhanced-header py-12 px-4 rounded-lg shadow-lg mb-8 relative"
      >
        <div class="circuit-pattern"></div>
        <h1 class="text-5xl font-bold text-neutral-900 dark:text-white mb-4">
          LLMS.txt Explorer
        </h1>
        <p
          class="text-xl text-neutral-700 dark:text-neutral-300 max-w-3xl mx-auto"
        >
          Discover and analyze LLMS.txt files from <span class="font-bold"
            >{sortedLlmsData.length}</span
          > domains across the web
        </p>
      </div>
    </header>

    <div
      class="mb-8 bg-white dark:bg-neutral-800 p-6 rounded-lg shadow-md enhanced-filter"
    >
      <h2 class="text-2xl font-bold text-neutral-900 dark:text-white mb-4">
        Search &amp; Filter
      </h2>
      <div class="flex flex-col md:flex-row gap-4 mb-6">
        <div class="w-full md:w-1/2">
          {/* Adjusted width */}
          <label
            for="search"
            class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1"
            >Search</label
          >
          <input
            type="text"
            id="search"
            placeholder="Search by title, domain, summary..."
            class="w-full px-4 py-2 border border-neutral-300 rounded-md focus:ring-primary-500 focus:border-primary-500 dark:bg-neutral-800 dark:border-neutral-600 dark:text-white"
          />
        </div>

        <div class="w-full md:w-1/2">
          <label
            for="domain-filter"
            class="block text-sm font-medium text-neutral-700 dark:text-neutral-300 mb-1"
            >Filter by Source Domain</label
          >
          <select
            id="domain-filter"
            class="w-full px-4 py-2 border border-neutral-300 rounded-md focus:ring-primary-500 focus:border-primary-500 dark:bg-neutral-800 dark:border-neutral-600 dark:text-white"
          >
            <option value="">All Source Domains</option>
            {
              uniqueDomains.map((domain: string) => (
                <option value={domain}>{domain}</option>
              ))
            }
          </select>
        </div>
      </div>
      <div class="flex justify-between items-center mt-4">
        <p
          id="results-count"
          class="text-sm text-neutral-600 dark:text-neutral-400"
        >
          Showing <span class="font-medium">{sortedLlmsData.length}</span> results
        </p>
        <div class="flex items-center space-x-4">
          <div class="flex items-center">
            <input
              type="checkbox"
              id="show-low-quality"
              class="h-4 w-4 text-primary-600 border-neutral-300 rounded focus:ring-primary-500 dark:bg-neutral-700 dark:border-neutral-600"
              checked
            />
            <label
              for="show-low-quality"
              class="ml-2 block text-sm text-neutral-700 dark:text-neutral-300"
              >Include Low Quality</label
            >
          </div>
          {/* Toggle button removed */}
        </div>
      </div>
    </div>
    {/* Closing enhanced-filter div */}

    <section
      class="mt-10 max-w-3xl mx-auto bg-white dark:bg-neutral-800 p-6 rounded-lg shadow-md"
    >
      <h2 class="text-2xl font-bold text-neutral-900 dark:text-white mb-4">
        About LLMS.txt
      </h2>
      <p class="text-neutral-700 dark:text-neutral-300 mb-4">
        LLMS.txt is an emerging standard that helps websites communicate their
        preferences for AI training and crawling. This explorer provides
        insights into how different domains implement this standard.
      </p>
      <div class="flex justify-center">
        <a
          href="https://llmstxt.org/"
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors glow-button"
        >
          <svg
            class="w-5 h-5 mr-2"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              d="M10 2a8 8 0 100 16 8 8 0 000-16zm0 14a6 6 0 100-12 6 6 0 000 12z"
              clip-rule="evenodd"></path>
            <path
              fill-rule="evenodd"
              d="M10 6a1 1 0 011 1v3.586l2.707 2.707a1 1 0 01-1.414 1.414l-3-3A1 1 0 019 11V7a1 1 0 011-1z"
              clip-rule="evenodd"></path>
          </svg>
          Learn More About LLMS.txt
        </a>
      </div>
    </section>

    {/* Table View */}
    <div
      id="table-view"
      class="mt-8 overflow-x-auto bg-white dark:bg-neutral-800 rounded-lg shadow-md enhanced-table"
    >
      <table
        class="min-w-full divide-y divide-neutral-200 dark:divide-neutral-700"
      >
        <thead class="bg-neutral-50 dark:bg-neutral-800">
          <tr>
            <th
              scope="col"
              class="px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider w-1/3"
              >Title / Source Domain</th
            >
            <th
              scope="col"
              class="px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider"
              >Quality</th
            >
            <th
              scope="col"
              class="px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider w-2/5"
              >LLMS.txt URL</th
            >
            <th
              scope="col"
              class="px-6 py-3 text-left text-xs font-medium text-neutral-500 dark:text-neutral-300 uppercase tracking-wider"
              >Last Checked</th
            >
          </tr>
        </thead>
        <tbody
          class="bg-white divide-y divide-neutral-200 dark:bg-neutral-900 dark:divide-neutral-700"
          id="table-body"
        >
          {
            sortedLlmsData.map((entry: LlmEntry, index: number) => {
              const quality = (entry.quality ?? "Medium").toLowerCase();
              const title: string =
                entry.parsed_title ??
                entry.fallback_title ??
                entry.title ??
                entry.metadata.source_domain; // Explicitly type title
              const displayTitle =
                title.length > 60 ? title.substring(0, 57) + "..." : title; // Truncate long titles

              return (
                <tr
                  class:list={[
                    index % 2 === 0
                      ? "bg-white dark:bg-neutral-900"
                      : "bg-neutral-50 dark:bg-neutral-800",
                    { "opacity-50": quality === "low" },
                  ]}
                  data-domain={entry.metadata.source_domain}
                  data-quality={quality}
                  data-title={title.toLowerCase()}
                  data-summary={(
                    entry.parsed_summary ??
                    entry.fallback_summary ??
                    entry.summary ??
                    ""
                  ).toLowerCase()}
                >
                  <td
                    class="px-6 py-4 text-sm font-medium text-neutral-900 dark:text-white"
                    title={title}
                  >
                    {displayTitle}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm">
                    {quality === "high" && (
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
                        High
                      </span>
                    )}
                    {quality === "medium" && (
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
                        Medium
                      </span>
                    )}
                    {quality === "low" && (
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200">
                        Low
                      </span>
                    )}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-300">
                    <a
                      href={entry.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-primary-600 hover:text-primary-800 dark:text-primary-400 dark:hover:text-primary-300 truncate"
                      style="max-width: 400px; display: inline-block;"
                    >
                      {entry.url}
                    </a>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-neutral-500 dark:text-neutral-400">
                    {entry.last_checked_utc
                      ? new Date(entry.last_checked_utc).toLocaleString(
                          "en-US",
                          { dateStyle: "short", timeStyle: "short" }
                        )
                      : "N/A"}
                  </td>
                </tr>
              );
            })
          }
        </tbody>
      </table>
    </div>

    {/* Card View Removed */}

    <div
      class="mt-12 bg-white dark:bg-neutral-800 p-6 rounded-lg shadow-md enhanced-about"
    >
      <h2 class="text-2xl font-bold text-neutral-900 dark:text-white mb-4">
        About This Project
      </h2>
      <div class="prose dark:prose-invert max-w-none">
        <p>
          The LLMS.txt Explorer is a tool designed to help developers,
          researchers, and website owners understand how the LLMS.txt standard
          is being implemented across the web.
        </p>
        <p>
          By analyzing LLMS.txt files from various domains, we can gain insights
          into how different organizations are approaching AI training
          permissions and restrictions.
        </p>
        <p>
          This project utilizes Astro for the frontend framework and Tailwind
          CSS for styling. The data is sourced from a regularly updated JSON
          file containing metadata extracted from LLMS.txt files found across
          the web.
        </p>
        <h3 class="text-xl font-semibold mt-6 mb-2">Features</h3>
        <ul class="list-disc list-inside">
          <li>Display of LLMS.txt entries in a table view.</li>
          <li>Search functionality across titles, domains, and summaries.</li>
          <li>Filtering by source domain and quality rating.</li>
          <li>Responsive design for various screen sizes.</li>
          <li>Dark mode support.</li>
        </ul>
        <h3 class="text-xl font-semibold mt-6 mb-2">Contributing</h3>
        <p>
          Contributions are welcome! Please refer to the project's GitHub
          repository for contribution guidelines and to report issues.
        </p>
        <div class="flex justify-center mt-6">
          <a
            href="https://github.com/example/llms-explorer"
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center px-4 py-2 bg-neutral-700 text-white rounded-md hover:bg-neutral-900 dark:bg-neutral-600 dark:hover:bg-neutral-700 transition-colors"
          >
            <svg
              class="w-5 h-5 mr-2"
              fill="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
              ></path>
            </svg>
            View on GitHub
          </a>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Client-side script for filtering, view toggling, etc.
    const searchInput = document.getElementById("search") as HTMLInputElement;
    const domainFilter = document.getElementById(
      "domain-filter"
    ) as HTMLSelectElement;
    const showLowQualityCheckbox = document.getElementById(
      "show-low-quality"
    ) as HTMLInputElement;
    const resultsCount = document.getElementById(
      "results-count"
    ) as HTMLElement;
    // const cardView = document.getElementById("card-view") as HTMLElement; // Removed
    const tableView = document.getElementById("table-view") as HTMLElement;
    const tableBody = document.getElementById("table-body") as HTMLElement;
    // const toggleViewButton = document.getElementById("toggle-view") as HTMLButtonElement; // Removed

    // const allCards = Array.from(cardView.querySelectorAll<HTMLElement>("[data-domain]")); // Removed
    const allTableRows = Array.from(
      tableBody.querySelectorAll<HTMLElement>("tr[data-domain]")
    );

    // let isCardView = true; // Removed - Table view is now default

    function filterEntries() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedDomain = domainFilter.value;
      const showLowQuality = showLowQualityCheckbox.checked;

      let visibleCount = 0;

      // Filter Table Rows
      allTableRows.forEach((row) => {
        const domain = row.dataset.domain || "";
        const quality = row.dataset.quality || "";
        const title = row.dataset.title || "";
        const summary = row.dataset.summary || ""; // Assuming summary is in data attribute for consistency

        const matchesSearch =
          title.includes(searchTerm) ||
          domain.includes(searchTerm) ||
          summary.includes(searchTerm);
        const matchesDomain = !selectedDomain || domain === selectedDomain;
        const matchesQuality = showLowQuality || quality !== "low";

        const isVisible = matchesSearch && matchesDomain && matchesQuality;
        row.style.display = isVisible ? "" : "none";
        if (isVisible) {
          visibleCount++; // Count visible rows
        }
      });

      // Update results count
      resultsCount.innerHTML = `Showing <span class="font-medium">${visibleCount}</span> results`;
    }

    // function toggleView() { ... } // Removed

    // Event Listeners
    searchInput.addEventListener("input", filterEntries);
    domainFilter.addEventListener("change", filterEntries);
    showLowQualityCheckbox.addEventListener("change", filterEntries);
    // toggleViewButton.addEventListener("click", toggleView); // Removed

    // Initial filter on load
    filterEntries();
  </script>
</Layout>

<style is:global>
  /* Enhanced Header Styling */
  .enhanced-header {
    /* Light theme gradient */
    background: linear-gradient(
        rgba(245, 245, 245, 0.8),
        rgba(229, 229, 229, 0.95)
      ),
      url("/assets/background.svg"); /* Ensure background.svg is in public/assets */
    background-size: cover;
    background-position: center;
    position: relative;
    overflow: hidden;
  }

  .circuit-pattern {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(
        var(--color-primary-500) 0.5px,
        transparent 0.5px
      ),
      radial-gradient(var(--color-primary-500) 0.5px, transparent 0.5px);
    background-size: 20px 20px;
    background-position:
      0 0,
      10px 10px;
    opacity: 0.05;
    pointer-events: none;
  }

  /* Enhanced Filter/About/Table Styling */
  .enhanced-filter,
  .enhanced-about,
  .enhanced-table {
    border: 1px solid var(--color-neutral-200);
  }
  .dark .enhanced-filter,
  .dark .enhanced-about,
  .dark .enhanced-table {
    border: 1px solid var(--color-neutral-700);
  }

  /* Glow Button Effect */
  .glow-button {
    position: relative;
    overflow: hidden;
    transition:
      background-color 0.3s ease,
      box-shadow 0.3s ease;
  }

  .glow-button:hover {
    box-shadow: 0 0 15px 5px var(--color-primary-400);
  }

  /* Ensure line-clamp works */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
  }

  /* Focus state for cards */
  [data-domain][tabindex="0"]:focus {
    outline: none; /* Remove default outline */
  }

  /* Style table rows for low quality */
  #table-body tr[data-quality="low"] {
    opacity: 0.6;
  }
  #table-body tr[data-quality="low"]:hover {
    opacity: 1; /* Restore opacity on hover */
  }
</style>
